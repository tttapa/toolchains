name: Docker

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:

env:
  # Used for extracting toolchain before pushing
  TEMPORARY_TAG: ${{ github.repository }}:tmp
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      # This is used to complete the identity challenge
      # with sigstore/fulcio when running outside of PRs.
      id-token: write
    strategy:
      matrix:
        triple:
          - 'aarch64-rpi3-linux-gnu'
          - 'armv6-rpi-linux-gnueabihf'
          - 'armv8-rpi3-linux-gnueabihf'
          - 'x86_64-centos7-linux-gnu'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install the cosign tool except on PR
      # https://github.com/sigstore/cosign-installer
      - name: Install cosign
        if: github.event_name != 'pull_request'
        uses: sigstore/cosign-installer@f3c664df7af409cb4873aa5068053ba9d61a57b6 #v2.6.0
        with:
          cosign-release: 'v1.11.0'

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@79abd3f86f79a9d68a23c75a09a9a85889262adf

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@28218f9b04b4f3f62068d7b6ce6ca5b26e35336c
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            prefix=${{ matrix.triple }}-
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=raw,value=${{ matrix.triple }},prefix=

      # Build and load Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and load Docker image
        id: build
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          target: gcc-build
          build-args: HOST_TRIPLE=${{ matrix.triple }}
          load: true
          tags: ${{ env.TEMPORARY_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Archive the toolchain in the Docker container and copy it to the build environment
      - name: Export toolchain
        run: |
          container=$(docker run -d ${{ env.TEMPORARY_TAG }} \
              bash -c "tar cJf x-tools.tar.xz x-tools")
          status=$(docker wait $container)
          if [ $status -ne 0 ]; then
              echo "Error creating toolchain archives"
              exit 1
          fi
          echo "Copying toolchain from Docker container to host"
          docker cp $container:/home/develop/x-tools.tar.xz x-tools-${{ matrix.triple }}.tar.xz
          docker rm $container
          
      - name: Upload toolchain
        uses: actions/upload-artifact@v2
        with:
          name: x-tools-${{ matrix.triple }}
          path: x-tools-${{ matrix.triple }}.tar.xz

      - name: Release toolchain
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: x-tools-${{ matrix.triple }}.tar.xz

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@ac9327eae2b366085ac7f6a2d02df8aa8ead720a
        with:
          context: .
          build-args: HOST_TRIPLE=${{ matrix.triple }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # Sign the resulting Docker image digest except on PRs.
      # This will only write to the public Rekor transparency log when the Docker
      # repository is public to avoid leaking data.  If you would like to publish
      # transparency data even for private images, pass --force to cosign below.
      # https://github.com/sigstore/cosign
      - name: Sign the published Docker image
        if: ${{ github.event_name != 'pull_request' }}
        env:
          COSIGN_EXPERIMENTAL: "true"
        # This step uses the identity token to provision an ephemeral certificate
        # against the sigstore community Fulcio instance.
        run: echo "${{ steps.meta.outputs.tags }}" | xargs -I {} cosign sign {}@${{ steps.build-and-push.outputs.digest }}
