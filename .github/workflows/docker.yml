name: Build and publish Docker

on:
  release:
    types: ['released', 'prereleased']
  workflow_dispatch:

env:
  # Used for extracting toolchain before pushing
  TEMPORARY_TAG: ${{ github.repository }}:tmp
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    strategy:
      matrix:
        triple:
          - 'aarch64-rpi3-linux-gnu'
          - 'armv6-rpi-linux-gnueabihf'
          - 'armv7-neon-linux-gnueabihf'
          - 'armv8-rpi3-linux-gnueabihf'
          - 'x86_64-centos7-linux-gnu'
          - 'x86_64-bionic-linux-gnu'
          - 'x86_64-focal-linux-gnu'
        gcc-version:
          - '15'
          - '14'
          - '13'
          - '12'
        exclude:
          - triple: 'x86_64-centos7-linux-gnu'
            gcc-version: '14'
          - triple: 'x86_64-centos7-linux-gnu'
            gcc-version: '15'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Workaround: https://github.com/docker/build-push-action/issues/461
      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@8e5442c4ef9f78752691e2d8f8d19755c6f78e81
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          flavor: |
            prefix=${{ matrix.triple }}-gcc${{ matrix.gcc-version }}-
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=tag
            type=ref,event=pr
            type=ref,event=branch,prefix=${{ matrix.triple }}-,enable=${{ matrix.gcc-version == '14' }}
            type=ref,event=tag,prefix=${{ matrix.triple }}-,enable=${{ matrix.gcc-version == '14' }}
            type=ref,event=pr,prefix=${{ matrix.triple }}-,enable=${{ matrix.gcc-version == '14' }}
            type=raw,value=${{ matrix.triple }},prefix=,enable=${{ matrix.gcc-version == '14' }}
            type=raw,value=${{ matrix.triple }}-gcc${{ matrix.gcc-version }},prefix=

      # Build and load Docker image with Buildx
      # https://github.com/docker/build-push-action
      - name: Build and load Docker image
        id: build
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: .
          target: gcc-build
          build-args: |
            HOST_TRIPLE=${{ matrix.triple }}
            GCC_VERSION=${{ matrix.gcc-version }}
          load: true
          tags: ${{ env.TEMPORARY_TAG }}
          cache-from: type=gha,scope=${{ matrix.triple }}-gcc${{ matrix.gcc-version }}
          cache-to: type=gha,mode=max,scope=${{ matrix.triple }}-gcc${{ matrix.gcc-version }}

      # Archive the toolchain in the Docker container and copy it to the build environment
      - name: Export toolchain
        run: |
          container=$(docker run -d ${{ env.TEMPORARY_TAG }} \
              bash -c "tar cJf x-tools.tar.xz x-tools")
          status=$(docker wait $container)
          if [ $status -ne 0 ]; then
              echo "Error creating toolchain archives"
              exit 1
          fi
          echo "Copying toolchain from Docker container to host"
          docker cp $container:/home/develop/x-tools.tar.xz x-tools-${{ matrix.triple }}-gcc${{ matrix.gcc-version }}.tar.xz
          docker rm $container

      - name: Upload toolchain
        uses: actions/upload-artifact@v4
        with:
          name: x-tools-${{ matrix.triple }}-gcc${{ matrix.gcc-version }}
          path: x-tools-${{ matrix.triple }}-gcc${{ matrix.gcc-version }}.tar.xz

      - name: Release toolchain
        if: ${{ github.event.action == 'released' || github.event.action == 'prereleased' }}
        uses: softprops/action-gh-release@17cd0d34deddf848fc0e7d9be5202c148c270a0a
        with:
          files: x-tools-${{ matrix.triple }}-gcc${{ matrix.gcc-version }}.tar.xz

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0
        with:
          context: .
          build-args: |
            HOST_TRIPLE=${{ matrix.triple }}
            GCC_VERSION=${{ matrix.gcc-version }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
